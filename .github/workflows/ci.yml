name: CI

on: [push]

env:
  GCR_DOMAIN: eu.gcr.io
  GCR_IMAGE_API: tsumego-1575212161857/api

jobs:
  build-and-publish:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Read .nvmrc
        run: echo "::set-output name=nvmrc::$(cat .nvmrc)"
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.nvmrc }}'
      - name: npm install, build, and test
        run: |
          yarn install --frozen-lockfile
          yarn build
          yarn test
        env:
          CI: true
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: gcloud info
      - name: Login to GCR
        run: gcloud auth configure-docker
      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $GCR_DOMAIN/$GCR_IMAGE_API:$IMAGE_TAG -f packages/api/Dockerfile .
          docker push $GCR_DOMAIN/$GCR_IMAGE_API:$IMAGE_TAG

      - name: Logout of Amazon GCR
        if: always()
        run: docker logout $GCR_DOMAIN
  # deploy:
  #   if: github.ref == 'refs/heads/master'
  #   needs: build-and-publish
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-2
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #     - name: Render Amazon ECS task definition
  #       id: render-task-definition
  #       uses: aws-actions/amazon-ecs-render-task-definition@v1
  #       with:
  #         task-definition: packages/api/task-definition.json
  #         container-name: api
  #         image: ${{ steps.login-ecr.outputs.registry }}/tsumego/api:${{ github.sha }}
  #     - uses: actions/upload-artifact@v1
  #       with:
  #         name: task-definition
  #         path: ${{ steps.render-task-definition.outputs.task-definition }}
  #     - name: Deploy to Amazon ECS service
  #       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #       with:
  #         task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
  #         service: tsumego-api
  #         cluster: default
